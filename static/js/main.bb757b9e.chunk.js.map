{"version":3,"sources":["components/Sidebar.js","components/Editor.js","App.js","index.js"],"names":["Sidebar","props","noteElements","notes","map","note","index","React","createElement","key","id","className","concat","currentNote","onClick","setCurrentNoteId","newNote","Editor","_ref","updateNote","selectedTab","setSelectedTab","useState","converter","Showdown","Converter","tables","simplifiedAutoLink","strikethrough","tasklists","ReactMde","value","body","onChange","onTabChange","generateMarkdownPreview","markdown","Promise","resolve","makeHtml","minEditorHeight","heightUnits","App","setNotes","currentNoteId","createNewNote","nanoid","prevNotes","findCurrentNote","find","length","Split","sizes","direction","text","oldNotes","oldNote","ReactDOM","createRoot","document","getElementById","render"],"mappings":"sNAEe,SAASA,EAAQC,GAC/B,MAAMC,EAAeD,EAAME,MAAMC,IAAI,CAACC,EAAMC,IAC3CC,IAAAC,cAAA,OAAKC,IAAKJ,EAAKK,IACdH,IAAAC,cAAA,OAECG,UAAS,SAAAC,OAAWP,EAAKK,KAAOT,EAAMY,YAAYH,GAAK,gBAAkB,IAEzEI,QAASA,IAAMb,EAAMc,iBAAiBV,EAAKK,KAE3CH,IAAAC,cAAA,MAAIG,UAAU,gBAAe,QAAML,EAAQ,MAK9C,OACCC,IAAAC,cAAA,WAASG,UAAU,gBAClBJ,IAAAC,cAAA,OAAKG,UAAU,mBACdJ,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAQG,UAAU,WAAWG,QAASb,EAAMe,SAAS,MAErDd,G,qCClBW,SAASe,EAAMC,GAA+B,IAA9B,YAAEL,EAAW,WAAEM,GAAYD,EACzD,MAAOE,EAAaC,GAAkBd,IAAMe,SAAS,SAE/CC,EAAY,IAAIC,IAASC,UAAU,CACxCC,QAAQ,EACRC,oBAAoB,EACpBC,eAAe,EACfC,WAAW,IAGZ,OACCtB,IAAAC,cAAA,WAASG,UAAU,eAClBJ,IAAAC,cAACsB,IAAQ,CACRC,MAAOlB,EAAYmB,KACnBC,SAAUd,EACVC,YAAaA,EACbc,YAAab,EACbc,wBAA0BC,GACzBC,QAAQC,QAAQf,EAAUgB,SAASH,IAEpCI,gBAAiB,GACjBC,YAAY,Q,oBCRD,SAASC,IACtB,MAAOvC,EAAOwC,GAAYpC,IAAMe,SAAS,KAClCsB,EAAe7B,GAAoBR,IAAMe,SAC7CnB,EAAM,IAAMA,EAAM,GAAGO,IAAO,IAG/B,SAASmC,IACP,MAAM7B,EAAU,CACdN,GAAIoC,cACJd,KAAM,0CAERW,EAASI,GAAa,CAAC/B,KAAY+B,IACnChC,EAAiBC,EAAQN,IAW3B,SAASsC,IACP,OAAO7C,EAAM8C,KAAK5C,GACTA,EAAKK,KAAOkC,IACfzC,EAAM,GAGd,OACEI,IAAAC,cAAA,YAEIL,EAAM+C,OAAS,EAEb3C,IAAAC,cAAC2C,IAAK,CACJC,MAAO,CAAC,GAAI,IACZC,UAAU,aACV1C,UAAU,SAEVJ,IAAAC,cAACR,EAAO,CACNG,MAAOA,EACPU,YAAamC,IACbjC,iBAAkBA,EAClBC,QAAS6B,IAGTD,GACAzC,EAAM+C,OAAS,GACf3C,IAAAC,cAACS,EAAM,CACLJ,YAAamC,IACb7B,WAnCd,SAAoBmC,GAClBX,EAASY,GAAYA,EAASnD,IAAIoD,GACzBA,EAAQ9C,KAAOkC,EAClB,IAAKY,EAASxB,KAAMsB,GACpBE,QAoCAjD,IAAAC,cAAA,OAAKG,UAAU,YACbJ,IAAAC,cAAA,UAAI,qBACJD,IAAAC,cAAA,UACEG,UAAU,aACVG,QAAS+B,GACV,oBCxEAY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAAOtD,IAAAC,cAACkC,EAAG,S","file":"static/js/main.bb757b9e.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function Sidebar(props) {\n\tconst noteElements = props.notes.map((note, index) => (\n\t\t<div key={note.id}>\n\t\t\t<div\n\n\t\t\t\tclassName={`title ${note.id === props.currentNote.id ? \"selected-note\" : \"\"\n\t\t\t\t\t}`}\n\t\t\t\tonClick={() => props.setCurrentNoteId(note.id)}\n\t\t\t>\n\t\t\t\t<h4 className=\"text-snippet\">Note {index + 1}</h4>\n\t\t\t</div>\n\t\t</div>\n\t))\n\n\treturn (\n\t\t<section className=\"pane sidebar\">\n\t\t\t<div className=\"sidebar--header\">\n\t\t\t\t<h3>Notes</h3>\n\t\t\t\t<button className=\"new-note\" onClick={props.newNote}>+</button>\n\t\t\t</div>\n\t\t\t{noteElements}\n\t\t</section>\n\t)\n}\n","import React from \"react\"\nimport ReactMde from \"react-mde\"\nimport Showdown from \"showdown\"\n\nexport default function Editor({ currentNote, updateNote }) {\n\tconst [selectedTab, setSelectedTab] = React.useState(\"write\")\n\n\tconst converter = new Showdown.Converter({\n\t\ttables: true,\n\t\tsimplifiedAutoLink: true,\n\t\tstrikethrough: true,\n\t\ttasklists: true,\n\t})\n\n\treturn (\n\t\t<section className=\"pane editor\">\n\t\t\t<ReactMde\n\t\t\t\tvalue={currentNote.body}\n\t\t\t\tonChange={updateNote}\n\t\t\t\tselectedTab={selectedTab}\n\t\t\t\tonTabChange={setSelectedTab}\n\t\t\t\tgenerateMarkdownPreview={(markdown) =>\n\t\t\t\t\tPromise.resolve(converter.makeHtml(markdown))\n\t\t\t\t}\n\t\t\t\tminEditorHeight={80}\n\t\t\t\theightUnits=\"vh\"\n\t\t\t/>\n\t\t</section>\n\t)\n}\n","\nimport './App.css';\nimport React from \"react\"\nimport Sidebar from \"./components/Sidebar\"\nimport Editor from \"./components/Editor\"\n// import { data } from \"./data\"\nimport Split from \"react-split\"\nimport { nanoid } from \"nanoid\"\n\n/**\n * Challenge: Spend 10-20+ minutes reading through the code\n * and trying to understand how it's currently working. Spend\n * as much time as you need to feel confident that you \n * understand the existing code (although you don't need\n * to fully understand everything to move on)\n */\n\nexport default function App() {\n  const [notes, setNotes] = React.useState([])\n  const [currentNoteId, setCurrentNoteId] = React.useState(\n    (notes[0] && notes[0].id) || \"\"\n  )\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    }\n    setNotes(prevNotes => [newNote, ...prevNotes])\n    setCurrentNoteId(newNote.id)\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId\n        ? { ...oldNote, body: text }\n        : oldNote\n    }))\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId\n    }) || notes[0]\n  }\n\n  return (\n    <main>\n      {\n        notes.length > 0\n          ?\n          <Split\n            sizes={[30, 70]}\n            direction=\"horizontal\"\n            className=\"split\"\n          >\n            <Sidebar\n              notes={notes}\n              currentNote={findCurrentNote()}\n              setCurrentNoteId={setCurrentNoteId}\n              newNote={createNewNote}\n            />\n            {\n              currentNoteId &&\n              notes.length > 0 &&\n              <Editor\n                currentNote={findCurrentNote()}\n                updateNote={updateNote}\n              />\n            }\n          </Split>\n          :\n          <div className=\"no-notes\">\n            <h1>You have no notes</h1>\n            <button\n              className=\"first-note\"\n              onClick={createNewNote}\n            >\n              Create one now\n            </button>\n          </div>\n\n      }\n    </main>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);"],"sourceRoot":""}